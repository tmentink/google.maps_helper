var GMH=function(a){"use strict";return a.Data={},a.Data.Map={},a.Data.Polygons={},a}(GMH||{}),GMH=function(a){"use strict";a.Defaults={},a.Defaults.Map={zoom:6,center:{lat:37.5,lng:-120},mapTypeId:google.maps.MapTypeId.ROADMAP},a.Defaults.Polygon={strokeColor:"#FF0000",strokeOpacity:.8,strokeWeight:1,fillColor:"#FF0000",fillOpacity:.5};var b=function(a,b){return d("set",a,b)},c=function(a,b){return d("update",a,b)},d=function(b,c,d){try{var c;switch(c.toLowerCase()){case"map":c="Map";break;case"polygon":c="Polygon"}var e=d;if("update"==b){var f=a.Defaults[c];e=$.extend({},f,d)}return a.Defaults[c]=e,!0}catch(a){return console.log(a),!1}};return a.Defaults.set=b,a.Defaults.update=c,a}(GMH||{}),GMH=function(a){"use strict";a.Utility={};var b=function(a){try{for(var b=[],c=a.split("|"),d=0,e=c.length;d<e;d++){var f=c[d].split(","),g={lat:parseFloat(f[0]),lng:parseFloat(f[1])};b.push(g)}return b}catch(a){return console.log(a),[]}};return a.Utility.toLatLngArray=b,a}(GMH||{}),GMH=function(a){"use strict";"undefined"==typeof a.Map&&(a.Map={});var b=function(b,c){try{var d=$.extend({},{},a.Defaults.Map),e=$.extend({},d,c);return a.Data.Map.Obj=new google.maps.Map(document.getElementById(b),e),!0}catch(a){return console.log(a),!1}};return a.Map.init=b,a}(GMH||{}),GMH=function(a){"use strict";"undefined"==typeof a.Polygon&&(a.Polygon={}),a.Data.Polygons._index=0;var b=function(){var b=a.Data.Polygons._index;return a.Data.Polygons._index++,b},c=function(a,b,c){return d(a,b,c)},d=function(c,d,g){try{return Array.isArray(c)?e(c):(null==c&&(c=b()),a.Data.Polygons[c]?(console.log("ERROR: ID already exists"),!1):null==d?(console.log("ERROR: Must supply a path"),!1):(f(c,d,g),!0))}catch(a){return console.log(a),!1}},e=function(c){try{for(var d=[],e=0,g=c.length;e<g;e++){var h=c[e].id,i=c[e].path,j=c[e].options;null==h&&(h=b()),a.Data.Polygons[h]||null==i?d.push(!1):(d.push(!0),f(h,i,j))}return d}catch(a){return console.log(a),!1}},f=function(b,c,d){null==d&&(d={});var e=a.Defaults.Polygon;"string"==typeof c&&(c=a.Utility.toLatLngArray(c)),d.paths=c;var f=$.extend({},e,d),g=new google.maps.Polygon(f);g.setMap(a.Data.Map.Obj),a.Data.Polygons[b]={},a.Data.Polygons[b].Obj=g};return a.Polygon.add=c,a}(GMH||{}),GMH=function(a){"use strict";"undefined"==typeof a.Polygon&&(a.Polygon={});var b=function(a){return c(a)},c=function(b){try{return Array.isArray(b)?d(b):void 0==a.Data.Polygons[b]?(console.log("ERROR: ID does not reference a polygon"),!1):(e(b),!0)}catch(a){return console.log(a),!1}},d=function(b){try{for(var c=[],d=0,f=b.length;d<f;d++){var g=b[d];void 0!=a.Data.Polygons[g]?(c.push(!0),e(g)):c.push(!1)}return c}catch(a){return console.log(a),!1}},e=function(b){a.Data.Polygons[b].Obj.setMap(null),delete a.Data.Polygons[b]};return a.Polygon.delete=b,a}(GMH||{}),GMH=function(a){"use strict";"undefined"==typeof a.Polygon&&(a.Polygon={});var b=function(a){return e("toggle",a)},c=function(a){return e("show",a)},d=function(a){return e("hide",a)},e=function(b,c){try{return Array.isArray(c)?f(b,c):void 0==a.Data.Polygons[c]?(console.log("ERROR: ID does not reference a polygon"),!1):(g(b,c),!0)}catch(a){return console.log(a),!1}},f=function(b,c){try{for(var d=[],e=0,f=c.length;e<f;e++){var h=c[e];void 0!=a.Data.Polygons[h]?(d.push(!0),g(b,h)):d.push(!1)}return d}catch(a){return console.log(a),!1}},g=function(a,b){switch(a){case"toggle":h(b);break;case"show":i(b);break;case"hide":j(b)}},h=function(b){var c=a.Data.Polygons[b].Obj.getVisible();a.Data.Polygons[b].Obj.setOptions({visible:!c})},i=function(b){a.Data.Polygons[b].Obj.setOptions({visible:!0})},j=function(b){a.Data.Polygons[b].Obj.setOptions({visible:!1})};return a.Polygon.toggle=b,a.Polygon.show=c,a.Polygon.hide=d,a}(GMH||{}),GMH=function(a){"use strict";"undefined"==typeof a.Polygon&&(a.Polygon={});var b=function(a,b){return d(a,b)},c=function(a,b){return f(a,b)},d=function(b,c){try{return Array.isArray(b)?e(b):void 0==a.Data.Polygons[b]?(console.log("ERROR: ID does not reference a polygon"),!1):(null==c&&(c=a.Defaults.Polygon),h(b,c),!0)}catch(a){return console.log(a),!1}},e=function(b){try{for(var c=[],d=0,e=b.length;d<e;d++){var f=b[d].id,g=b[d].options;void 0!=a.Data.Polygons[f]?(null==g&&(g=a.Defaults.Polygon),c.push(!0),h(f,g)):c.push(!1)}return c}catch(a){return console.log(a),!1}},f=function(b,c){try{return Array.isArray(b)?g(b):void 0==a.Data.Polygons[b]?(console.log("ERROR: ID does not reference a polygon"),!1):null==c?(console.log("ERROR: Must supply a path"),!1):(i(b,c),!0)}catch(a){return console.log(a),!1}},g=function(b){try{for(var c=[],d=0,e=b.length;d<e;d++){var f=b[d].id,g=b[d].path;void 0!=a.Data.Polygons[f]&&null!=g?(c.push(!0),i(f,g)):c.push(!1)}return c}catch(a){return console.log(a),!1}},h=function(b,c){"string"==typeof c.path&&(c.path=a.Utility.toLatLngArray(c.path)),a.Data.Polygons[b].Obj.setOptions(c)},i=function(b,c){"string"==typeof c&&(c=a.Utility.toLatLngArray(c)),a.Data.Polygons[b].Obj.setOptions({paths:c})};return a.Polygon.update=b,a.Polygon.updatePath=c,a}(GMH||{});